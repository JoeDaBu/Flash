// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}
model Student {
  user_name    String @unique
  first_name   String
  last_name    String
  email        String @unique
  password     String
  phone_number String? // optional
}

model Tutor {
  user_name         String        @unique
  first_name        String
  last_name         String
  email             String        @unique
  password          String
  preference        Course[]      @relation(name: "preferences")
  year_level        Int
  completed_courses Course[]      @relation(name: "completed_courses")
  gpa               Float? // optional
  preferred_meetup  String? // optional
  rate              Float
  course_badge      CourseBadge[]
  phone_number      String?
}

model Course {
  tutorPref      Tutor?    @relation(fields: [tutorPref_name], references: [user_name], name: "preferences")
  tutorCom       Tutor?    @relation(fields: [tutorCom_name], references: [user_name], name: "completed_courses")
  listing        Listing?   @relation(fields: [listing_id], references: [id])
  listing_id     String?
  tutorPref_name String?
  tutorCom_name  String?
  course_id      String    @id @default(cuid())
  department     String    
  course_number  Int
}

model CourseBadge {
  course_badge_id    String    @id @default(cuid())
  subject            String
//   verified_by_grades Int // should this be integer? 
  Tutor              Tutor?   @relation(fields: [tutorUser_name], references: [user_name])
  tutorUser_name     String?
}

model Listing {
  id                 String    @id @default(cuid()) // newly added field to identify listings
  title              String
  course             Course[]
  description        String
  //price_range           String
  lowest_price       Int
  highest_price      Int
  preferred_location String
  preferred_time     String // unless there's a better way to capture time
  fast               Boolean // indicates if the listing is fast or not
}
